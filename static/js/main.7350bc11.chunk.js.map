{"version":3,"sources":["components/FetchedPosts.module.css","redux/types.js","redux/actions.js","components/Alert.js","components/PostForm.js","components/Post.js","components/Posts.js","components/Loader.js","components/FetchedPosts.js","components/Header.js","App.js","reportWebVitals.js","redux/appReducer.js","redux/postsReducer.js","redux/rootReducer.js","redux/middleware.js","index.js","components/Header.module.css"],"names":["module","exports","CREATE_POST","FETCH_POST","SHOW_LOADER","HIDE_LOADER","SHOW_ALERT","HIDE_ALERT","hideLoader","type","showAlert","text","dispatch","payload","setTimeout","Alert","className","role","PostForm","props","SubmitHandler","event","preventDefault","title","state","trim","newPost","id","Date","now","toString","createPost","setState","changeInputHandler","persist","prev","target","name","value","onSubmit","this","alert","htmlFor","onChange","React","Component","mapDispatchToProps","post","connect","app","syncPosts","posts","length","map","Post","Loader","useDispatch","useSelector","fetchedPosts","loading","classes","button1","onClick","a","fetch","response","json","description","imageUrl","headerBlock","headerBlock__overlay","headerBlock__center","App","Header","FetchedPosts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","concat","forbidden","store","createStore","composeWithDevTools","applyMiddleware","thunk","next","filter","w","includes","render","document","getElementById"],"mappings":"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","file":"static/js/main.7350bc11.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button1\":\"FetchedPosts_button1__1VJVE\"};","export const CREATE_POST = 'POST/CREATE_POST';\r\nexport const FETCH_POST = 'POST/FETCH_POST';\r\nexport const SHOW_LOADER = 'APP/SHOW_LOADER';\r\nexport const HIDE_LOADER = 'APP/HIDE_LOADER';\r\nexport const SHOW_ALERT = 'APP/SHOW_ALERT';\r\nexport const HIDE_ALERT = 'APP/HIDE_ALERT';","import {CREATE_POST, FETCH_POST, HIDE_ALERT, HIDE_LOADER, SHOW_ALERT, SHOW_LOADER} from './types';\r\n\r\nexport function createPost(post){\r\n\treturn{\r\n\t\ttype: CREATE_POST,\r\n\t\tpayload: post\r\n\t}\r\n}\r\n\r\nexport function showLoader(){\r\n\treturn {\r\n\t\ttype: SHOW_LOADER\r\n\t}\r\n}\r\n\r\nexport function hideLoader(){\r\n\treturn {\r\n\t\ttype: HIDE_LOADER\r\n\t}\r\n}\r\n\r\nexport function showAlert(text){\r\n\treturn dispatch => {\r\n\t\tdispatch({\r\n\t\t\ttype: SHOW_ALERT,\r\n\t\t\tpayload: text\r\n\t\t})\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tdispatch(hideAlert())\r\n\t\t}, 3000)\r\n\t}\r\n}\r\n\r\nexport function hideAlert(){\r\n\treturn {\r\n\t\ttype: HIDE_ALERT\r\n\t}\r\n}\r\n\r\nexport function fetchPosts(){\r\n\treturn async dispatch => {\r\n\t\ttry{\r\n\t\t\tdispatch(showLoader());\r\n\t\t\tconst response = await fetch('https://jsonplaceholder.typicode.com/posts?_limit=7');\r\n\t\t\tconst json = await response.json();\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tdispatch({type: FETCH_POST, payload: json});\r\n\t\t\t\tdispatch(hideLoader())\r\n\t\t\t}, 500);\r\n\t\t} catch(e) {\r\n\t\t\tdispatch(showAlert('Что-то пошло не так'));\r\n\t\t\tdispatch(hideLoader());\r\n\t\t}\r\n\r\n\r\n\t}\r\n}","import React from 'react';\r\n\r\nexport const Alert = ( {text} ) => (\r\n\t<div className=\"alert alert-warning\" role=\"alert\">\r\n\t\t{text}\r\n\t</div>\r\n)","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {createPost, showAlert} from '../redux/actions';\r\nimport {Alert} from './Alert';\r\n\r\nclass PostForm extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\ttitle: ''\r\n\t\t};\r\n\t}\r\n\r\n\tSubmitHandler = event => {\r\n\t\tevent.preventDefault();\r\n\t\tconst {title} = this.state; //дестр-ция объекта \r\n\t\tif (!title.trim()) { //пост с пустым заголовком не добавляем \r\n\t\t\treturn this.props.showAlert('Название поста не может быть пустым')\r\n\t\t}\r\n\r\n\t\tconst newPost = {\r\n\t\t\ttitle, id: Date.now().toString()\r\n\t\t}\r\n\r\n\t\t// console.log(newPost);\r\n\t\tthis.props.createPost(newPost);  //вызываем диспатч -> меняем стейт\r\n\t\tthis.setState({title: ''});\r\n\t}\r\n\r\n\tchangeInputHandler = event => {\r\n\t\tevent.persist(); //?\r\n\t\t//в setState передаем функцию (и вызываем), которая обновит value для input \r\n\t\tthis.setState( prev => ({...prev, ...{\r\n\t\t\t[event.target.name]: event.target.value\r\n\t\t}})); \r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<form onSubmit={this.SubmitHandler}>\r\n\t\t\t\t{this.props.alert && <Alert text={this.props.alert}/>}\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label htmlFor=\"title\">Заголовок поста</label>\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\tclassName=\"form-control\" \r\n\t\t\t\t\t\tid=\"title\" value={this.state.title} \r\n\t\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\t\tonChange={this.changeInputHandler}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<button className=\"btn btn-success\" type=\"submit\">Создать</button>\r\n\t\t\t</form>\r\n\t\t)\t\r\n\t}\r\n}\r\n\r\n//actions\r\nconst mapDispatchToProps = {\r\n\tcreatePost, showAlert\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\talert: state.app.alert\r\n})\r\n\r\n// export default connect(null, {createPost})(PostForm)\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostForm)","import React from 'react';\r\n\r\nexport default ({post}) => {\r\n\treturn (\r\n\t\t<div className=\"card\">\r\n\t\t\t<div className=\"card-body\">\r\n\t\t\t\t<h5 className=\"card-title\">{post.title}</h5>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react';\r\nimport Post from './Post';\r\nimport {connect} from 'react-redux';\r\n\r\nconst Posts = ({ syncPosts }) => {\r\n\tif (!syncPosts.length){\r\n\t\treturn <p className=\"text-center\">Постов пока нет</p>\r\n\t}\r\n\treturn syncPosts.map(post => <Post post={post} key={post.id}/>)\r\n}\r\n\r\n//подписка на обновления хранилища\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tsyncPosts: state.posts.posts\r\n\t};\r\n}\r\n\r\n//компонент-контейнер \r\nexport default connect(mapStateToProps)(Posts);","import React from 'react';\r\n\r\nexport const Loader = () => (\r\n\t<div className=\"spinner-border text-primary\" role=\"status\">\r\n  \t\t<span className=\"sr-only\">Loading...</span>\r\n\t</div>\r\n)","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {fetchPosts} from '../redux/actions';\r\nimport Post from './Post';\r\nimport {Loader} from './Loader';\r\nimport classes from './FetchedPosts.module.css'\r\n\r\nexport default () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst posts = useSelector(state => state.posts.fetchedPosts); //получение из сторе\r\n\tconst loading = useSelector(state => state.app.loading);\r\n\r\n\tif(loading){\r\n\t\treturn <Loader />\r\n\t}\r\n\r\n\r\n\tif (!posts.length){\r\n\t\t// return <button className=\"btn btn-primary\" onClick={() => dispatch(fetchPosts())} >Загрузить</button>\r\n\t\treturn <button className={classes.button1} onClick={() => dispatch(fetchPosts())} >Загрузить</button>\r\n\t}\r\n\treturn posts.map(post => <Post post={post} key={post.id}/>)\r\n}\r\n","import React from 'react'\r\nimport classes from './Header.module.css'\r\n\r\n\texport default ({title, description, imageUrl}) => {\r\n\treturn (\r\n\t\t// <div className={classes.headerBlock} style={{ backgroundImage: 'url(${imageUrl})'}}>\r\n\t\t<div className={classes.headerBlock}>\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className={classes.headerBlock__overlay}></div>\r\n\t\t\t\t<div className={classes.headerBlock__center}>\r\n\t\t\t\t\t<h1>{title}</h1>\r\n\t\t\t\t\t<h3>{description}</h3>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react';\r\nimport PostForm from './components/PostForm';\r\nimport Posts from './components/Posts';\r\nimport FetchedPosts from './components/FetchedPosts';\r\nimport Header from './components/Header'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"container pt-3\">\r\n      <Header  \r\n        title=\"Блог\"\r\n        description=\"для тестирования redux\"\r\n        imageUrl=\"https://images.unsplash.com/photo-1486520299386-6d106b22014b?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\" \r\n      />\r\n      <div className=\"container\">\r\n        <div className=\"content\">\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <PostForm />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <h3>Созданные посты (синхронно)</h3>\r\n              <Posts />\r\n            </div>\r\n            <div className=\"col\">\r\n              <h3>Загруженные посты (асинхронно)</h3>\r\n              <FetchedPosts />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {SHOW_LOADER, HIDE_LOADER, SHOW_ALERT, HIDE_ALERT} from './types';\r\n\r\nconst initialState = {\r\n\tloading: false,\r\n\talert: null\r\n}\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n\tswitch (action.type){\r\n\t\tcase SHOW_LOADER: \r\n\t\t\treturn {...state, loading: true}\r\n\t\tcase HIDE_LOADER: \r\n\t\t\treturn {...state, loading: false}\r\n\t\tcase SHOW_ALERT: \r\n\t\t\treturn {...state, alert: action.payload}\r\n\t\tcase HIDE_ALERT: \r\n\t\t\treturn {...state, alert: null}\r\n\t\tdefault: return state\r\n\t}\r\n} ","import FetchedPosts from '../components/FetchedPosts';\r\nimport {CREATE_POST, FETCH_POST} from './types';\r\n\r\n\r\nconst initialState = {\r\n\tposts: [],\r\n\tfetchedPosts: []\r\n}\r\n\r\nexport const postsReducer = (state = initialState, action) => {\r\n\tswitch (action.type){\r\n\t\tcase CREATE_POST: \r\n\t\t\treturn {...state, posts: state.posts.concat([action.payload])}\r\n\t\tcase FETCH_POST:\r\n\t\t\treturn {...state, fetchedPosts: action.payload}\r\n\t\tdefault: return state\r\n\t}\r\n}","import {combineReducers} from 'redux';\r\nimport {appReducer} from './appReducer';\r\nimport {postsReducer} from './postsReducer';\r\n\r\n//функция формирования нового state\r\n//принимает набор редьюсеров приложения\r\nexport const rootReducer = combineReducers( {\r\n\t//импортируем состояние возвращаемое postsReducer по ключу: posts\r\n\tposts: postsReducer,\r\n\tapp: appReducer\r\n})","import { CREATE_POST } from \"./types\";\r\nimport {showAlert} from './actions';\r\n\r\nconst forbidden = ['qwerty', 'asd', 'zxc', '123'];\r\n\r\nexport function forbiddenWordsMiddleware({dispatch}) {\r\n\treturn function(next){\r\n\t\treturn function(action){\r\n\t\t\tif (action.type ===CREATE_POST){\r\n\t\t\t\tconst found = forbidden.filter(w => action.payload.title.includes(w)) \r\n\t\t\t\tif (found.length) {\r\n\t\t\t\t\treturn dispatch(showAlert('Это спам'))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn next(action)\r\n\t\t}\r\n\t}\r\n}","import React from 'react';\r\nimport {render} from 'react-dom';\r\nimport {createStore, applyMiddleware} from 'redux';\r\n// import {compose} from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport {Provider} from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {rootReducer} from './redux/rootReducer';\r\nimport {forbiddenWordsMiddleware} from './redux/middleware'\r\nimport './styles/app.css';\r\n\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools( applyMiddleware(thunk, forbiddenWordsMiddleware) ));\r\n// const store = createStore(rootReducer, compose(\r\n//   applyMiddleware(thunk),\r\n//   window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()\r\n// ));\r\n\r\nconst app = (\r\n  <Provider store={store}> \r\n    <App />\r\n  </Provider>\r\n);\r\n\r\nrender(app, document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerBlock\":\"Header_headerBlock__2LbK7\",\"headerBlock__center\":\"Header_headerBlock__center__2h3sH\",\"headerBlock__overlay\":\"Header_headerBlock__overlay__1P3DT\"};"],"sourceRoot":""}